
what is GitHub?
-it is used to store data permanently
-allows collaboration
-visual experience of repositories
what is git?
-version control system used to track the changes in files or folders
-staging area-imaginary space in local space that stores tracked files
Git commands:
1.git init-initializing empty git repository in local machine.
2.git add filename-working copy(untracked files)to tracked files and adds to staging area
3.git commit -m "msg"-push message to local repository ,used to write commit message
4.git push url-used to push code from local repo to remote repo(GitHub)
5.git clone url-used to take a copy of remote repo into local repo
git remote add origin https://github.com/sreeja2618/training.git
git push -u origin master
git add .
------------------------------------------
HTML-hyper text markup language
-hyper text-text containing multiple links
-used to create structure content
CSS-cascading styling sheets
-font
-color
-size
-position
-shape
JAVASCRIPT(Functionalized programming language
-used to design dynamic websites
-Static website-constant to every user
1.fb login
-Dynamic website-different to everyone depending upon data
1.youtube
2.criczbuzz
3.google maps
4.amazon
-used for web development
-used on both client and server side
-allows the webpage to change without reloading the entire page
-is a scripting language
-mainly used for form validation
-released by company "Netscape"
-Brendan Eich(intoduced by)
-LiveScript(first name of js)
-latest version "ES13"
Note:
current version of javascript is es14
but stable version is es6
-ECMA-European computer Manufacturing association
-running code line byline is synchronous execution
*Variables:
-used to store data
-store any kind of data
-when a variable is used multiple times to assign a value,latest value is considered
-variables cant start with numbers
-variables can start with letters,_,$
-variables can include letters,numbers,special char(_,$)
-variables are case-sensitive(except for sql)
-space between two words in variable is not allowed
---------------------------------------------------------------
types of variables 
var-both re-initialiazation and declaration are possible
let-can reinitialize but not re declare
constant-not both

var username="rakesh"
var-variable
username-identifier
rakesh-value/data

-method to print in ui=document.writeln

what is comment?
-to give an information to the developers

html=<!--comment-->
css=/*comment*/
2types
------
1.Single line=//
2.Multiple line=/*comment*/

var
------
var a=10;
a=100;-->re-initialization
console.log(a);-->100

var user="m";
var user="p";-->re-declaration
console.log(user);-->p
let
------
let a=10;
a=100;-->re-initialization
console.log(a);-->100

var user="m";
var user="p";-->re-declaration
console.log(user);-->cannot re-declare
----------
What is datatype?
used to specify what kind of data is stored in a variable
types
-----
1.Primitive data type-non-mutable,built-in,single value
-string
sequence of characters enclosed within "",'',``(template literals/backtiks)
typeof(identifier)-to recheck

-number
range=-2^53-1 to ++2^53-1
beyond this range datatype is bigint

-Boolean
true/false

-undefined
declared but not initialized

-null
acceptable empty value,absence of an object
typeof() return object

-symbol

-bigint
any valye suffix with "n" is bigint
eg:2n

2.Non-primitive data types-mutable,user-defined,multiple values
-objects(math,date,json)
-arrays
-functions
--------------------------------------------------------------------
Operators:
Special are special type of symbols used to perform some operations on operands
-unary
-binary
-ternary(operand1?operand2:operand3)
----------------------------------------------
arithmetic operator
addition
subtraction
multiplication
modulus
divison
increment(++)
   -pre-increment:increment before execution
   -post-increment:increment after execution
decrement(--)
   -pre-decrement:decrement before execution
   -post-decrement:decrement after execution
exponential
----------------------------------------------
assignment operator
=
*=
-=
+=
/=
**=
%=
--------------------------------------------
relational operator
used to compare two values
==-doesnot check datatype
===-checks datatype
!=-doesnot check datatype
!==-checks datatype
>
<
>=
<=
--------------------------------------------
logical operator
AND(&&)-when both the conditions are true then returns true else false
OR(||)-when both are true or even if any one is true then true else false
NOT(!)-if true then returns false and viceversa
--------------------------------------------
concatenation:adding two or more strings
typecasting:converting one datatype to another 
NaN:not a number-illegal,which cannot be performed
-----------------------------------------------
decision making statements
if-only work for true statements
if else
esle if ladder-multiple condition
switch
ternary
take 3 values and print which value is greater among 3 numbers
--------------------------------------------------------
looping statements
-to execute the block of code repeatedly
for loop
-will be used when exact iteration count is known
syntax:
for(initialization;consition;updation){
       //statements
         }
while loop
-will be used when we dont know exact iteration count
syntax:
while(condition){
//statements
}
do-while
-will be used when we dont know exact iteration count
syntax:
do{
//statements
}while(condition)
*entry-control loops-for,while
*exit control loops-do-while
min iterations of for and while is 0
min iterations for do-while is 1
---------------------------------------------
difference between break and continue
break-when consiiton satisfied it will terminate the loop permanently
continue-when the condiditon is satisfied it will only skip that particular loop
----------------------------------------------
Methods:block of code used to perform specific task
Functions:reusable code
function is a block of code used to execute specific task asssigned to it
function is a non-primitive datatype
functions can be reusable
syntax:function function_name(optional parameters){//function declaration
//statements
}
function_name(arguments)
---------------------------
Types of  Functions:
Named function:function in which its having a name and  invoked with name

Anonymous function:function which doesnot have any name for declaration and invoking
-cannot be implemented directly use next 2 types

function expression
-can be called any number of times(variables)
-Anonymousfunction is assigned to a variable and invoked

immediate invoke function expression(iife)
-can be called only once(())
-once the function is created immediately it should be invkoed

arrow function
-used to concise the normal function syntax
syntax:
()=>{
};
-is similar to Anonymous function

higher order function
- a function which accepts another function as an arguments to its paramter.

-return:return variable/expression/values,terminate the function body
explicit return
implicit return

callback function
function that is passed as an argument/value for another function.
-------------------------------------
closure
-is a memory where functions are bundled together/functions are nested eachother
by giving accessibility to the inner most function to access the variables of outer most function
------------------------
Arrays:
non-primitive datatype
collection of items/valuexs
-array can store homogenous values and heterogenous values
-out of index bound-undefined
syntax:-
let arr=[];
-----------------------------
map and foreach difference

map-used to iterate the values of array one by one
-it will return new Array from original when return is used
-used mostly for strings


ForEach-used to values from the array
will not return the new array(copied array)
return undefined when return is used
------------------------------
methods in array:
push()-add end index of array
pop()-remove end index of array
unshift()-add in the first index of array
shift()-remove first index
reverse()-reverse the array
join()-return the array as string
concat()-add the arrays
---------------------------------------
Object:
-object is an entity 
-main purpose is to store the values in the form of key and value pair
-physical entity which is having states(properties) and behavior(functionality)
-syntax:
let obj={};
NOTE:javascript is called as object based language+OOPs until es6 later both class and object based
ex:let obj={
            name:"sreeja",
            age:25
}
NOTE:"this" keyword is used to access current exceuting object properties
-----------------------------------------
Json:
used totransmit data from client to server and server to client
syntax:{
         "key":"value"
}
-for json no need to store inside a variable
-keys and values should be double coated only except numbers
-json is always in the form of string
Methods if Json:
JSON.stringfy()-js object to java object:stringfy
JSON.parse()-java object to js object:parse
 //font awesome
 -------------------------------------------
 asynchronous in js
 -to perform multiple task in js
 NOTE:by default,javascript is synchronous(single threaded)
 NOTE:by default java is single thread
 1.setTimeout():-it is a web api

 2.setInterval()it is a web api used to perform async opeartions at certain time interval
 syntax: setInterval(callback,timeout)

 3.promise-is an object which represents eventual completion or failure of asyncronous operation
 States:
 1.pending states
 2.fulfilled states
 3.rejected states
 syntax:-let p=new Promise((resolve,reject)=>{});
 NOTE:compulsory to give a callback fn
 -the actual way of executing the promise is instance method
 i.then()-used to execute fulfilledstate
 ii.catch()-used to execute rejected state
 iii.finally()-once promise is settled it will print the value
 4.async and await
 async:converts synchronous fn to asynchronous fn and start to execute the promise
 await:used to make the fn to wait until the promise complete
 --------------------------------------------------
 api-application programming interface
 --------------------------------------------------
 DOM:Document Object Model
 -used to add,update,remove  content in the html documnent
 -used to manipulate content in the html document

 DOM methods:
 -start with document always
 1.document.getElementById(""):-used to target the html element based on id attribute value
                              -id attribute must be unique
 2.document.getElementByClassName(""):used to target the element based on the class attribute value
                              -class attribute can be used with multiple elements unlike id
 3.document.getElementByTagName(""):used to select  based on tag names
 4.document.getElementByName(""):it is used to traget html element based on name attribute value
 -these below methods are quite different from 4 methods
 5.document.querySelecter("")-#id value
 selects only 1 element
 6.document.querySelecterAll("")-.class
 queryselector is faster than getelementbyid 
 selects multiple elements
 innerText:it is a property to manipulateplain text
 innerHTML:it is a property used to add/remove the content within a element
 ===========================================
 spread operator: takes each and every value from original array and store it inside one more new array
 new array is always a pure Array
 ======================================================
 Event in DOM
 -events are actions performed on html element
 -click events,mouwse events,key events
Importrtant events:
 click events:
 onclick
 ondbclick
 onsubmit
 onchange
 mouse events:
 mouseover,mouseleave
 key events:
 keydown
 keyup
 keypress(deprecated)
 ====================================================
 dynamic creation of html element from hjs:
 dynamic element in js we have a method called "document.createElement"
 to create an attribute we have an attribute called "setAttribute"
 to remove an attribute we have an attribute called "removeAttribute"












